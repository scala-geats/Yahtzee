import org.scalatest.FlatSpec
import org.scalatest.matchers.ShouldMatchers


/**
 * Created by IntelliJ IDEA.
 * User: david
 * Date: 13/10-11
 * Time: 18:37 
 */

class RollsSpec extends FlatSpec with ShouldMatchers {
  "One rolls" should "return five dice results" in {
    new Rolls().size should be (5)
  }

  it should "return values between 1 and 6" in {
   new Rolls().values.forall {value => value >= 1 && value <= 6} should be (true)
  }

  "Re-rolls" should "re-roll" in {
   val r = new Rolls() with TestRoll
   r.values should be (List(1,2,3,4,5))
   r.reroll(false, false, true, false, false)
   r.values should be (List(1,2,6,4,5))
  }
  it should "re-roll and keep three dices" in {
    val r = new Rolls() with TestRoll
    r.values should be (List(1,2,3,4,5))
    r.reroll(false, false, true, true, false)
    r.values should be (List(1,2,6,1,5))
  }

  "Rolls" should "be generated by roll trait" in {
    val r = new Rolls() with Roll {
      override def roll = 6
    }
    r.values should be (List(6,6,6,6,6))

  }
}

trait TestRoll extends Roll {

  // important, must be five
  var lastRoll = 5;

  override def roll = {
    lastRoll = lastRoll % 6 + 1
    lastRoll
  }
}